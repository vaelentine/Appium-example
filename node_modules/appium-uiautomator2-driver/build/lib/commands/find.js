"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.helpers = void 0;

require("source-map-support/register");

var _cssConverter = _interopRequireDefault(require("../css-converter"));

const helpers = {};
exports.helpers = helpers;
const MAGIC_FIRST_VIS_CHILD_SEL = /\/\*\[@firstVisible ?= ?('|")true\1\]/;
const MAGIC_SCROLLABLE_SEL = /\/\/\*\[@scrollable ?= ?('|")true\1\]/;
const MAGIC_SCROLLABLE_BY = 'new UiSelector().scrollable(true)';

helpers.doFindElementOrEls = async function (params) {
  if (params.strategy === 'xpath' && MAGIC_FIRST_VIS_CHILD_SEL.test(params.selector)) {
    let elementId = params.context;
    return await this.uiautomator2.jwproxy.command(`/appium/element/${elementId}/first_visible`, 'GET', {});
  }

  if (params.strategy === 'xpath' && MAGIC_SCROLLABLE_SEL.test(params.selector)) {
    params.strategy = '-android uiautomator';
    params.selector = MAGIC_SCROLLABLE_BY;
  }

  if (params.strategy === 'css selector') {
    params.strategy = '-android uiautomator';
    params.selector = new _cssConverter.default(params.selector, this.opts.appPackage).toUiAutomatorSelector();
  }

  return await this.uiautomator2.jwproxy.command(`/element${params.multiple ? 's' : ''}`, 'POST', params);
};

var _default = helpers;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9maW5kLmpzIl0sIm5hbWVzIjpbImhlbHBlcnMiLCJNQUdJQ19GSVJTVF9WSVNfQ0hJTERfU0VMIiwiTUFHSUNfU0NST0xMQUJMRV9TRUwiLCJNQUdJQ19TQ1JPTExBQkxFX0JZIiwiZG9GaW5kRWxlbWVudE9yRWxzIiwicGFyYW1zIiwic3RyYXRlZ3kiLCJ0ZXN0Iiwic2VsZWN0b3IiLCJlbGVtZW50SWQiLCJjb250ZXh0IiwidWlhdXRvbWF0b3IyIiwiandwcm94eSIsImNvbW1hbmQiLCJDc3NDb252ZXJ0ZXIiLCJvcHRzIiwiYXBwUGFja2FnZSIsInRvVWlBdXRvbWF0b3JTZWxlY3RvciIsIm11bHRpcGxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUVBLE1BQU1BLE9BQU8sR0FBRyxFQUFoQjs7QUFJQSxNQUFNQyx5QkFBeUIsR0FBRyx1Q0FBbEM7QUFFQSxNQUFNQyxvQkFBb0IsR0FBRyx1Q0FBN0I7QUFDQSxNQUFNQyxtQkFBbUIsR0FBRyxtQ0FBNUI7O0FBTUFILE9BQU8sQ0FBQ0ksa0JBQVIsR0FBNkIsZ0JBQWdCQyxNQUFoQixFQUF3QjtBQUNuRCxNQUFJQSxNQUFNLENBQUNDLFFBQVAsS0FBb0IsT0FBcEIsSUFBK0JMLHlCQUF5QixDQUFDTSxJQUExQixDQUErQkYsTUFBTSxDQUFDRyxRQUF0QyxDQUFuQyxFQUFvRjtBQUNsRixRQUFJQyxTQUFTLEdBQUdKLE1BQU0sQ0FBQ0ssT0FBdkI7QUFDQSxXQUFPLE1BQU0sS0FBS0MsWUFBTCxDQUFrQkMsT0FBbEIsQ0FBMEJDLE9BQTFCLENBQW1DLG1CQUFrQkosU0FBVSxnQkFBL0QsRUFBZ0YsS0FBaEYsRUFBdUYsRUFBdkYsQ0FBYjtBQUNEOztBQUNELE1BQUlKLE1BQU0sQ0FBQ0MsUUFBUCxLQUFvQixPQUFwQixJQUErQkosb0JBQW9CLENBQUNLLElBQXJCLENBQTBCRixNQUFNLENBQUNHLFFBQWpDLENBQW5DLEVBQStFO0FBQzdFSCxJQUFBQSxNQUFNLENBQUNDLFFBQVAsR0FBa0Isc0JBQWxCO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ0csUUFBUCxHQUFrQkwsbUJBQWxCO0FBQ0Q7O0FBQ0QsTUFBSUUsTUFBTSxDQUFDQyxRQUFQLEtBQW9CLGNBQXhCLEVBQXdDO0FBQ3RDRCxJQUFBQSxNQUFNLENBQUNDLFFBQVAsR0FBa0Isc0JBQWxCO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ0csUUFBUCxHQUFrQixJQUFJTSxxQkFBSixDQUFpQlQsTUFBTSxDQUFDRyxRQUF4QixFQUFrQyxLQUFLTyxJQUFMLENBQVVDLFVBQTVDLEVBQ2ZDLHFCQURlLEVBQWxCO0FBRUQ7O0FBQ0QsU0FBTyxNQUFNLEtBQUtOLFlBQUwsQ0FBa0JDLE9BQWxCLENBQTBCQyxPQUExQixDQUFtQyxXQUFVUixNQUFNLENBQUNhLFFBQVAsR0FBa0IsR0FBbEIsR0FBd0IsRUFBRyxFQUF4RSxFQUEyRSxNQUEzRSxFQUFtRmIsTUFBbkYsQ0FBYjtBQUNELENBZkQ7O2VBa0JlTCxPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENzc0NvbnZlcnRlciBmcm9tICcuLi9jc3MtY29udmVydGVyJztcblxuY29uc3QgaGVscGVycyA9IHt9O1xuXG4vLyB3ZSBvdmVycmlkZSB0aGUgeHBhdGggc2VhcmNoIGZvciB0aGlzIGZpcnN0LXZpc2libGUtY2hpbGQgc2VsZWN0b3IsIHdoaWNoXG4vLyBsb29rcyBsaWtlIC8qW0BmaXJzdFZpc2libGU9XCJ0cnVlXCJdXG5jb25zdCBNQUdJQ19GSVJTVF9WSVNfQ0hJTERfU0VMID0gL1xcL1xcKlxcW0BmaXJzdFZpc2libGUgPz0gPygnfFwiKXRydWVcXDFcXF0vO1xuXG5jb25zdCBNQUdJQ19TQ1JPTExBQkxFX1NFTCA9IC9cXC9cXC9cXCpcXFtAc2Nyb2xsYWJsZSA/PSA/KCd8XCIpdHJ1ZVxcMVxcXS87XG5jb25zdCBNQUdJQ19TQ1JPTExBQkxFX0JZID0gJ25ldyBVaVNlbGVjdG9yKCkuc2Nyb2xsYWJsZSh0cnVlKSc7XG5cbi8qKlxuICogT3ZlcnJpZGluZyBoZWxwZXJzLmRvRmluZEVsZW1lbnRPckVscyBmdW5jdGlvbmFsaXR5IG9mIGFwcGl1bS1hbmRyb2lkLWRyaXZlcixcbiAqIHRoaXMuZWxlbWVudCBpbml0aWFsaXplZCBpbiBmaW5kLmpzIG9mIGFwcGl1bS1hbmRyb2lkLWRyaXZlLlxuICovXG5oZWxwZXJzLmRvRmluZEVsZW1lbnRPckVscyA9IGFzeW5jIGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgaWYgKHBhcmFtcy5zdHJhdGVneSA9PT0gJ3hwYXRoJyAmJiBNQUdJQ19GSVJTVF9WSVNfQ0hJTERfU0VMLnRlc3QocGFyYW1zLnNlbGVjdG9yKSkge1xuICAgIGxldCBlbGVtZW50SWQgPSBwYXJhbXMuY29udGV4dDtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy51aWF1dG9tYXRvcjIuandwcm94eS5jb21tYW5kKGAvYXBwaXVtL2VsZW1lbnQvJHtlbGVtZW50SWR9L2ZpcnN0X3Zpc2libGVgLCAnR0VUJywge30pO1xuICB9XG4gIGlmIChwYXJhbXMuc3RyYXRlZ3kgPT09ICd4cGF0aCcgJiYgTUFHSUNfU0NST0xMQUJMRV9TRUwudGVzdChwYXJhbXMuc2VsZWN0b3IpKSB7XG4gICAgcGFyYW1zLnN0cmF0ZWd5ID0gJy1hbmRyb2lkIHVpYXV0b21hdG9yJztcbiAgICBwYXJhbXMuc2VsZWN0b3IgPSBNQUdJQ19TQ1JPTExBQkxFX0JZO1xuICB9XG4gIGlmIChwYXJhbXMuc3RyYXRlZ3kgPT09ICdjc3Mgc2VsZWN0b3InKSB7XG4gICAgcGFyYW1zLnN0cmF0ZWd5ID0gJy1hbmRyb2lkIHVpYXV0b21hdG9yJztcbiAgICBwYXJhbXMuc2VsZWN0b3IgPSBuZXcgQ3NzQ29udmVydGVyKHBhcmFtcy5zZWxlY3RvciwgdGhpcy5vcHRzLmFwcFBhY2thZ2UpXG4gICAgICAudG9VaUF1dG9tYXRvclNlbGVjdG9yKCk7XG4gIH1cbiAgcmV0dXJuIGF3YWl0IHRoaXMudWlhdXRvbWF0b3IyLmp3cHJveHkuY29tbWFuZChgL2VsZW1lbnQke3BhcmFtcy5tdWx0aXBsZSA/ICdzJyA6ICcnfWAsICdQT1NUJywgcGFyYW1zKTtcbn07XG5cbmV4cG9ydCB7IGhlbHBlcnMgfTtcbmV4cG9ydCBkZWZhdWx0IGhlbHBlcnM7XG4iXSwiZmlsZSI6ImxpYi9jb21tYW5kcy9maW5kLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
